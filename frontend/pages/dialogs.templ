package pages

import "fmt"

templ forwardAndBackwardBtn(currDialogID, prevDialogID, nextDialogID string) {
	<div class="w-full mt-10 flex justify-end items-center gap-4">
		<button id={ fmt.Sprintf("%sBackBtn", currDialogID) } tabindex="10" _={ fmt.Sprintf("on click call #%s.close() then call #%s.showModal() then halt", currDialogID, prevDialogID) } class="py-[1.197rem] px-[1.197rem] rounded-3xl bg-[#FFFFFF1A]">
			<img src="/public/assets/svg/continue.svg" alt="" class="rotate-180 w-[0.545rem] m-[0.276rem] aspect-square"/>
		</button>
		<button disabled type="submit" id={ fmt.Sprintf("%sContinueBtn", currDialogID) } _={ fmt.Sprintf("on click  call handleSubmit('%s', '%sForm') then call #%s.close() then call #%s.showModal() then halt", currDialogID, currDialogID, currDialogID, nextDialogID) } class="opacity-40 flex gap-2 items-center py-[1.219rem] px-[2.196rem] rounded-3xl bg-CreateToken22">
			<p class="text-sm font-bold tracking-[0.001em] text-[#FDFDFD]">Continue </p>
			<img src="/public/assets/svg/continue.svg" alt="" class="w-[0.545rem] m-[0.276rem] aspect-square"/>
		</button>
	</div>
}

templ dialogPageNumberAndCloseBtn(pageNumber, dialogID string) {
	<section class="flex justify-between items-center gap-[28.25rem] text-[#A3A3A3]">
		<p class="font-medium text-2xl leading-[1.816rem] text-center">{ pageNumber }</p>
		<button tabindex="20" class="outline-none" _={ fmt.Sprintf("on click call %s.close() then call %sForm.reset() then remove .gradientRadio from <%s .wrapperDivOnInput/> then add .opacity-40 to %sContinueBtn then add @disabled to %sContinueBtn", dialogID, dialogID, dialogID, dialogID, dialogID) }>
			<img src="/public/assets/svg/close.svg" alt="" class="w-[1.766rem] aspect-square m-[0.366rem]"/>
		</button>
	</section>
}

templ dialogTitleText(titleText string) {
	<p class="font-normal text-2xl text-center my-10 text-white">{ titleText }</p>
}

templ dialogPageOne() {
	<dialog id="dialogPageOne" class="bg-[#0A041F] px-10 pt-[4.531rem] pb-[10.531rem] rounded-3xl border-solid border-[0.0625rem] border-[#FFFFFF0D] backdrop:backdrop-blur-sm">
		@dialogPageNumberAndCloseBtn("1/4", "#dialogPageOne")
		@dialogTitleText("What Token Standard?")
		<form action="" id="dialogPageOneForm">
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogOne(this)">
				<input type="radio" name="pageOne" id="token22" value="token22" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer "/>
				<label for="token22" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">Token22</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogOne(this)">
				<input type="radio" name="pageOne" id="zkTokens" value="zkTokens" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer"/>
				<label for="zkTokens" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">zk-Compressed Tokens</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogOne(this)">
				<input type="radio" name="pageOne" id="nanoTokens" value="nanoTokens" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer"/>
				<label for="nanoTokens" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">NanoTokens</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			<button
				disabled
				type="submit"
				id="dialogPageOneContinueBtn"
				_="on click call handleSubmit('dialogPageOne', 'dialogPageOneForm') then call #dialogPageOne.close() then call #dialogPageTwo.showModal() then halt"
				class="opacity-40 ml-auto mt-10 flex gap-2 items-center py-[1.219rem] px-[2.196rem] cursor-pointer rounded-3xl bg-CreateToken22"
			>
				<p class="text-sm font-bold tracking-[0.001em] text-[#FDFDFD]">Continue</p>
				<img src="/public/assets/svg/continue.svg" alt="" class="w-[0.545rem] m-[0.276rem] aspect-square"/>
			</button>
		</form>
		@scriptAndStylesForDialogs()
	</dialog>
}

templ dialogPageTwo() {
	<dialog id="dialogPageTwo" class="bg-[#0A041F] px-10 pt-[4.531rem] pb-[10.531rem] rounded-3xl border-solid border-[0.0625rem] border-[#FFFFFF0D] backdrop:backdrop-blur-sm">
		@dialogPageNumberAndCloseBtn("2/4", "#dialogPageTwo")
		@dialogTitleText("What type of token is this?")
		<form action="" id="dialogPageTwoForm">
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogTwo(this)">
				<input type="radio" name="pageTwo" id="tokens" value="tokens" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer "/>
				<label for="tokens" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">Fungible Tokens</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogTwo(this)">
				<input type="radio" name="pageTwo" id="sft" value="sft" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer"/>
				<label for="sft" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">SemiFungible Tokens (SFTs)</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex justify-center items-center gap-6" onclick="handleRadioClickDialogTwo(this)">
				<input type="radio" name="pageTwo" id="nft" value="nft" tabindex="1" class="w-[1.275rem] aspect-square opacity-70 rounded-[0.0231rem] cursor-pointer"/>
				<label for="nft" class="cursor-pointer">
					<p class="text-[#EBEBEB] font-normal text-[1.375rem] leading-7 -tracking-[0.0025em] text-left">NonFungible Tokens (NFTs)</p>
					<p class="text-[#A3A3A3] font-normal text-sm tracking-[0.004em] text-left">Lorem ipsum dolor sit amet consectetur adipiscing elit Ut et massa mi. Aliquam in hendrerit urna. Pellentesque sit amet sapien fringilla, mattis</p>
				</label>
			</div>
			@forwardAndBackwardBtn("dialogPageTwo", "dialogPageOne", "dialogPageThree")
		</form>
		@scriptAndStylesForDialogs()
	</dialog>
}

templ dialogPageThree() {
	<dialog id="dialogPageThree" class="bg-[#0A041F] px-10 pt-[4.531rem] pb-20 rounded-3xl border-solid border-[0.0625rem] border-[#FFFFFF0D] backdrop:backdrop-blur-sm">
		@dialogPageNumberAndCloseBtn("3/4", "#dialogPageThree")
		@dialogTitleText("Lets know more about your token")
		<form id="dialogPageThreeForm" class="text-[#EBEBEB]">
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex flex-col gap-4">
				<label for="tokenName" class="text-lg font-normal tracking-[0.005em]">Token names</label>
				<input
					required
					type="text"
					name="pageThree"
					id="tokenName"
					value=""
					tabindex="1"
					placeholder="Enter Token name"
					class="w-[33.563rem] aspect-[537/56] pl-2 rounded-3xl bg-inherit border-solid border-[#D1D1D1] border-[0.0313rem] outline-none
					placeholder:text-[#616161] placeholder:text-xs placeholder:font-bold placeholder:tracking-[0.005em]"
				/>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex flex-col gap-4">
				<label for="tokenSymbol" class="text-lg font-normal tracking-[0.005em]">Token symbol</label>
				<input
					required
					type="text"
					name="pageThree"
					id="tokenSymbol"
					value=""
					tabindex="1"
					placeholder="Enter Token symbol"
					class="w-[33.563rem] aspect-[537/56] pl-2 rounded-3xl bg-inherit border-solid border-[#D1D1D1] border-[0.0313rem] outline-none
					placeholder:text-[#616161] placeholder:text-xs placeholder:font-bold placeholder:tracking-[0.005em]"
				/>
			</div>
			<div class="wrapperDivOnInput py-6 pl-6 pr-[3.063rem] flex flex-col gap-4">
				<label for="tokenAvatar" class="text-lg font-normal tracking-[0.005em]">Token Image</label>
				<input
					required
					type="url"
					name="pageThree"
					id="tokenAvatar"
					value=""
					tabindex="1"
					placeholder="Enter Token image URL"
					class="w-[33.563rem] aspect-[537/56] pl-2 rounded-3xl bg-inherit border-solid border-[#D1D1D1] border-[0.0313rem] outline-none
					placeholder:text-[#616161] placeholder:text-xs placeholder:font-bold placeholder:tracking-[0.005em]"
				/>
			</div>
			@forwardAndBackwardBtn("dialogPageThree", "dialogPageTwo", "dialogPageFour")
		</form>
		@scriptAndStylesForDialogs()
		<style>
		// 	 input:not(:placeholder-shown):valid {
		// 		outline: none;
		// 		border-style: solid;
		// 		border-width: 0.0313rem;
		// 		border-image-source: linear-gradient(90deg, #AD6AFF 0%, #12DB88 100%);
		// 		padding: 5px;
		// 	}
			input:not(:placeholder-shown):invalid {
				outline: none;
				border-style: solid;
				border-width: 0.0313rem;
				border-color: #FF4B4B;
			}
		// 	input:focus:invalid {
		// 		outline: none;
		// 		border-style: solid;
		// 		border-width: 0.0313rem;
		// 		outline-color: yellow;
		// 	}
		</style>
	</dialog>
}

templ dialogPageFour() {
	<dialog id="dialogPageFour" class="bg-[#0A041F] px-10 pt-[4.531rem] pb-[10.531rem] rounded-3xl border-solid border-[0.0313rem] border-[#FFFFFF0D] backdrop:backdrop-blur-sm overflow-y-auto">
		@dialogPageNumberAndCloseBtn("4/4", "#dialogPageFour")
		@dialogTitleText("Generate mint address")
		<section class="grid grid-cols-2 gap-4 justify-center items-center bg-[#FFFFFF1A] p-2 rounded-3xl">
			<button
				autofocus
				class="forRandom py-[1.188rem] px-[3.984rem] rounded-3xl border-[0.103rem] border-transparent border-solid focus:outline-none"
			>
				<p class="text-[#FFFFFF] text-nowrap text-sm text-center tracking-[0.001em] font-bold">
					Generate Randomss
				</p>
			</button>
			<button class="forCustomise py-[1.188rem] px-[3.984rem] focus:rounded-3xl focus:border-[0.103rem] focus:border-transparent focus:border-solid focus:outline-none">
				<p class="text-[#FFFFFF] text-nowrap text-sm text-center tracking-[0.001em] font-bold">
					Customize
				</p>
			</button>
		</section>
		<section class="random mt-[7.5rem] flex justify-center items-center ">
			<div>
				<p class="text-[1.375rem] leading-7 font-normal -tracking-[0.0025em] text-[#EBEBEB] text-center">A random mint address would be <br/> generated for your token</p>
				<section class="w-full mt-10 flex justify-center items-center gap-4">
					<button _="on click call #dialogPageFour.close() then call #dialogPageThree.showModal() then halt" class="py-[1.197rem] px-[1.197rem] rounded-3xl bg-[#FFFFFF1A]">
						<img src="/public/assets/svg/continue.svg" alt="" class="rotate-180 w-[0.545rem] m-[0.276rem] aspect-square"/>
					</button>
					<button hx-post="/showMintExtensions" hx-target="#mainContent" hx-vals="js:{tokenInfo: generateRandomKeyPair()}" hx-swap="innerHTML" hx-push-url="true" _="on click call #dialogPageFour.close()" class="flex gap-2 items-center py-[1.219rem] px-[2.196rem] rounded-3xl bg-CreateToken22">
						<p class="text-sm font-bold tracking-[0.001em] text-[#FDFDFD]">Continue </p>
						<img src="/public/assets/svg/continue.svg" alt="" class="w-[0.545rem] m-[0.276rem] aspect-square"/>
					</button>
				</section>
			</div>
		</section>
		<section class="customise mt-10 hidden">
			<form action="" id="dialogPageFourForm" class="grid grid-rows-4 gap-6 justify-center text-[#A3A3A3]">
				<div class="wrapperDivOnInput grid grid-cols-dialogInput gap-8 justify-stretch items-center">
					<label for="startWith" class="text-xl font-normal tracking-[0.005em]">Start with</label>
					<input type="text" name="pageFour" id="startWith" placeholder="YOU CAN LEAVE EMPTY" class="w-[33.563rem] aspect-[537/56] ml-[1.21rem] placeholder:text-[#616161] placeholder:text-sm  placeholder:font-extrabold placeholder:tracking-[0.005em] pl-4 bg-inherit rounded-3xl border-solid border-[#D1D1D1] border-[0.0313rem] outline-white"/>
				</div>
				<div class="wrapperDivOnInput grid grid-cols-dialogInput gap-8 justify-stretch items-center">
					<label for="endWith" class="text-xl font-normal tracking-[0.005em]">End with</label>
					<input type="text" name="pageFour" id="endWith" placeholder="YOU CAN LEAVE EMPTY" class="w-[33.563rem] aspect-[537/56] ml-[1.21rem] placeholder:text-[#616161] placeholder:text-sm  placeholder:font-extrabold placeholder:tracking-[0.005em] pl-4 bg-inherit rounded-3xl border-solid border-[#D1D1D1] border-[0.0313rem] outline-white"/>
				</div>
				<div class="wrapperDivOnInput flex gap-4 justify-between items-center">
					<div class="flex gap-2 items-center">
						<input type="checkbox" name="pageFour" id="ignoreCase" class="w-4 aspect-square accent-emerald-500/25 "/>
						<label for="ignoreCase" class="text-xl font-normal tracking-[0.005em]">Ignore case</label>
					</div>
					<div class="flex gap-2 items-center">
						<input type="checkbox" name="pageFour" id="count" class="w-4 aspect-square  accent-emerald-500/25"/>
						<label for="count" class="text-xl font-normal tracking-[0.005em]">Count</label>
					</div>
					<div class="flex gap-2 items-center">
						<input type="number" name="pageFour" id="numThreads" min="2" max="10" step="1" value="8" class="w-7 aspect-square text-black font-medium text-center outline-none"/>
						<label for="numThreads" class="text-xl font-normal tracking-[0.005em]">Number Of Threads</label>
					</div>
					<div class="flex gap-2 items-center">
						<input checked type="checkbox" name="pageFour" id="outPutFile" class="w-4 aspect-square accent-emerald-500/25"/>
						<label for="outPutFile" class="text-xl font-normal tracking-[0.005em]">Output File</label>
					</div>
				</div>
				<div class="wrapperDivOnInput grid grid-cols-dialogInput gap-8 justify-stretch items-center">
					<label for="passPhrase" class="text-xl font-normal tracking-[0.005em]">PassPhrase</label>
					<input type="text" name="pageFour" id="passPhrase" placeholder="YOU CAN LEAVE EMPTY" class="w-[33.563rem] aspect-[537/56] ml-[1.21rem] placeholder:text-[#616161] placeholder:text-sm  placeholder:font-extrabold placeholder:tracking-[0.005em] pl-4 bg-inherit rounded-3xl border-solid border-[#D1D1D1] border-[0.0313rem] outline-white"/>
				</div>
				<div class="wrapperDivOnInput grid grid-cols-dialogInput gap-8 justify-stretch items-center">
					<label for="derivationPath" class="text-xl font-normal tracking-[0.005em]">Derivation path</label>
					<input type="text" name="pageFour" id="derivationPath" placeholder="EXAMPLE: m/44'/501'/0'/0'" class="w-[33.563rem] aspect-[537/56] ml-[1.21rem] placeholder:text-[#616161] placeholder:text-sm  placeholder:font-extrabold placeholder:tracking-[0.005em] pl-4 bg-inherit rounded-3xl border-solid border-[#D1D1D1] border-[0.0313rem] outline-white"/>
				</div>
				<div class="grid grid-cols-2 justify-center items-center gap-8">
					<div class="wrappDivOnInput wrappDivOnSelect">
						<label for="language" class="text-lg font-normal tracking-[0.005em]">SeedPhrase language</label>
						<select name="pageFour" id="language" class="ml-auto text-xs font-normal tracking-[0.005em] bg-inherit outline-none">
							<option value="english" class="text-xs font-semibold bg-[#0A041F]">in English</option>
							<option value="chinese-simplified" class="text-xs font-semibold bg-[#0A041F]">in Chinese-simplified</option>
							<option value="chinese-traditional" class="text-xs font-semibold bg-[#0A041F]">in Chinese-traditional</option>
							<option value="japanese" class="text-xs font-semibold bg-[#0A041F]">in Japanese</option>
							<option value="spanish" class="text-xs font-semibold bg-[#0A041F]">in Spanish</option>
							<option value="korean" class="text-xs font-semibold bg-[#0A041F]">in Korean</option>
							<option value="french" class="text-xs font-semibold bg-[#0A041F]">in French</option>
							<option value="italian" class="text-xs font-semibold bg-[#0A041F]">in Italian</option>
						</select>
					</div>
					<div class="wrappDivOnInput wrappDivOnSelect">
						<label for="wordCount" class="text-lg font-normal tracking-[0.005em]">SeedPhrase WordCount</label>
						<select name="pageFour" id="wordCount" class="ml-auto text-sm font-normal tracking-[0.005em] bg-inherit outline-none">
							<option value="12" class="text-sm font-bold bg-[#0A041F]">12-word seedphrase</option>
							<option value="15" class="text-sm font-bold bg-[#0A041F]">15-word seedphrase</option>
							<option value="18" class="text-sm font-bold bg-[#0A041F]">18-word seedphrase</option>
							<option value="21" class="text-sm font-bold bg-[#0A041F]">21-word seedphrase</option>
							<option value="24" class="text-sm font-bold bg-[#0A041F]">24-word seedphrase</option>
						</select>
					</div>
				</div>
				@forwardAndBackwardBtn("dialogPageFour", "dialogPageThree", "dialogPageFour")
			</form>
		</section>
		@scriptAndStylesForDialogs()
	</dialog>
}

var dialogScriptsAndStyles = templ.NewOnceHandle()

templ scriptAndStylesForDialogs() {
	@dialogScriptsAndStyles.Once() {
		<style>
		.gradientRadio {
			background: 
				linear-gradient(#1b012a 0 0) padding-box, /* this is your background */
				linear-gradient(90deg, #AD6AFF 0%, #12DB88 100%) border-box;
			border-radius: 16px;
			border: 1px solid transparent;
			opacity: 0px;
		}
		</style>
		<script defer>
		let TokenInfo = {}

	// dialog 1/4
		function handleRadioClickDialogOne(param) {
			const dialogPageOneContinueBtn = document.getElementById('dialogPageOneContinueBtn');
			dialogPageOneContinueBtn.disabled = false;
			dialogPageOneContinueBtn.classList.remove('opacity-40');


			const parentDivs = document.querySelectorAll('#dialogPageOne .wrapperDivOnInput');
			parentDivs.forEach(div => {
				div.classList.remove('gradientRadio');
			});

			param.classList.add('gradientRadio');
		}

	// dialog 2/4
		function handleRadioClickDialogTwo(param) {
			const dialogPageTwoContinueBtn = document.getElementById('dialogPageTwoContinueBtn');
			dialogPageTwoContinueBtn.disabled = false;
			dialogPageTwoContinueBtn.classList.remove('opacity-40');


			const parentDivs = document.querySelectorAll('#dialogPageTwo .wrapperDivOnInput');
			parentDivs.forEach(div => {
				div.classList.remove('gradientRadio');
			});

			param.classList.add('gradientRadio');
		}

	// dialog 3/4
		document.addEventListener('DOMContentLoaded', () => {
			const dialogPageThreeForm = document.getElementById('dialogPageThreeForm');
			const continueButton = document.getElementById('dialogPageThreeContinueBtn');
				
			function checkFormValidity() {
				if (dialogPageThreeForm.checkValidity()) {
					continueButton.disabled = false;
					continueButton.classList.remove('opacity-40');
				} else {
					continueButton.disabled = true;
					continueButton.classList.add('opacity-40');
				}
			}

			dialogPageThreeForm.addEventListener('input', checkFormValidity);

	// dialog 4/4
			const forRandomBtn = document.querySelector('.forRandom');
			const forCustomiseBtn = document.querySelector('.forCustomise');
			const randomSection = document.querySelector('.random');
			const customiseSection = document.querySelector('.customise');

			forRandomBtn.addEventListener('focus', () => {
				randomSection.style.display = 'flex';
				forRandomBtn.classList.add('gradientRadio')
				customiseSection.style.display = 'none';
				forCustomiseBtn.classList.remove('gradientRadio')
			});

			forCustomiseBtn.addEventListener('focus', () => {
				customiseSection.style.display = 'flex';
				forCustomiseBtn.classList.add('gradientRadio')
				randomSection.style.display = 'none';
				forRandomBtn.classList.remove('gradientRadio')
				const x = document.getElementById('dialogPageFour')
				x.classList.remove('pb-[10.531rem]')
				x.classList.add('pb-[5.266rem]')
			});
		});

	// input collection
		function handleSubmit(dialogID, dialogFormID) {
			event.preventDefault();
			
			const form = document.getElementById(dialogFormID)
			const formData = new FormData(form);
			// console.log(formData)

			let selectedValue;
			switch (dialogID) {
				case "dialogPageOne":
					selectedValue = formData.get('pageOne');
					TokenInfo.tokenStandard = selectedValue
					break

				case "dialogPageTwo":
					selectedValue = formData.get('pageTwo');
					TokenInfo.tokenType = selectedValue
					break

				case "dialogPageThree":
					selectedValue = formData.getAll('pageThree');
					const propertyNames = ['tokenName', 'tokenSymbol', 'tokenUrl'];
					selectedValue.forEach((value, index) => {
						if (index < propertyNames.length) {
							TokenInfo[propertyNames[index]] = value;
						}
					});
					break
					
				case "dialogPageFour":
					break
			}

			// console.log('Selected Value:', selectedValue);
			console.log('TokenInfo:', TokenInfo);
		}

		function generateRandomKeyPair() {
			return createRandomKeyPair(TokenInfo)	
		}
	</script>
	}
}
